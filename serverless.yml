service: growth-perp-maker

plugins:
    - serverless-plugin-log-retention
    - serverless-webpack
    - serverless-deployment-bucket
    - serverless-step-functions

useDotenv: true

provider:
    name: aws
    runtime: nodejs16.x
    memorySize: 512
    versionFunctions: false
    stage: ${opt:stage, 'production'}
    region: ${env:AWS_REGION}
    deploymentBucket:
        blockPublicAccess: true
        name: perp-serverless-deployment-${opt:stage, 'staging'}
        serverSideEncryption: AES256
    environment:
        STAGE: ${opt:stage, 'production'}
        NETWORK: ${env:NETWORK}
        L2_WEB3_ENDPOINTS: ${env:L2_WEB3_ENDPOINTS}
        PRIVATE_KEY: ${env:PRIVATE_KEY}
        IS_LAMBDA: 1

custom:
    logRetentionInDays: 30

    webpack:
        webpackConfig: "webpack.config.js"
        includeModules: false
        packager: "npm"

    deploymentBucket:
        versioning: true
        accelerate: true # this is required
        blockPublicAccess: true
        tags:
            - Key: Environment
              Value: ${opt:stage, 'staging'}

functions:
    main:
        timeout: 120
        handler: build/index.main
        reservedConcurrency: 1
        maximumRetryAttempts: 0

stepFunctions:
    stateMachines:
        perpMakerLoop:
            name: perpMakerLoop-${opt:stage}
            definition:
                Comment: Perp maker loop
                StartAt: Lambda Invoke
                States:
                    Lambda Invoke:
                        Type: Task
                        Resource: !GetAtt main.Arn
                        OutputPath: "$.Payload"
                        Parameters:
                            Payload.$: "$"
                        # Retry:
                        #     - ErrorEquals:
                        #         - Lambda.ServiceException
                        #         - Lambda.AWSLambdaException
                        #         - Lambda.SdkClientException
                        #     IntervalSeconds: 2
                        #     MaxAttempts: 6
                        #     BackoffRate: 2
                        Next: Wait
                    Wait:
                        Type: Wait
                        Seconds: 20
                        Next: Lambda Invoke
